{
	101_13: {
		title: Counsel of the Wise
		culture: gandalf
		twilight: 0
		type: event
		keyword: fellowship
		effects: {
			type: event
            requires: {
                type: canSpot
                filter: name(Gandalf)
            }
			cost: {
				type: chooseCardsFromDrawDeck
				filter: choose(culture(elven),ally)
				memorize: chosenAlly
				text: Choose an [Elven] ally to reveal from your draw deck.
			}
			effect: {
				type: optional
				text: Would you like to pay this card's twilight cost to take it into hand?
				effect: {
					type: costToEffect
					cost: {
						type: addtwilight
						amount: {
							type: twilightCostInMemory
							memory: chosenAlly
						}
					}
					effect: {
						type: putcardsfromdeckintohand
						count: 1
						filter: memory(chosenAlly)
					}
				}
			}
		}
	}
	# 101_14: {
	# 	title: Gandalf
	# 	subtitle: Olorin
	# 	unique: true
	# 	culture: gandalf
	# 	twilight: 4
	# 	type: companion
	# 	race: wizard
	# 	strength: 6
	# 	vitality: 4
	# 	signet: gandalf
	# 	resistance: 6
	# 	effects: [
	# 		{
	# 			type: trigger
	# 			optional: true
	# 			trigger: {
	# 				type: startOfPhase
	# 				phase: fellowship
	# 			}
	# 			requires: {
	# 				type: canSpot
	# 				filter: culture(elven),ally
	# 				count: 2
	# 			}
	# 			cost: {
	# 				type: exert
	# 				filter: choose(name(Gandalf))
	# 			}
	# 			effect: {
	# 				type: shuffleCardsFromDiscardIntoDrawDeck
	# 				filter: choose(or(culture(gandalf),culture(elven)))
	# 			}
	# 		}
	# 		{
	# 			type: modifier
	# 			modifier: {
	# 				type: modifyStrength
	# 				requires: {
	# 					type: canSpot
	# 					filter: culture(elven),ally
	# 					count: 3
	# 				}
	# 				filter: name(Gandalf)
	# 				amount: 2
	# 			}
	# 		}
			
	# 		{
	# 			type: modifier
	# 			modifier: {
	# 				type: modifyStrength
	# 				requires: [
	# 					{
	# 						type: canSpot
	# 						filter: name(Elrond)
	# 					}
	# 					{
	# 						type: canSpot
	# 						filter: name(Galadriel)
	# 					}
	# 					{
	# 						type: canSpot
	# 						filter: name(Celeborn)
	# 					}
	# 				]
	# 				filter: name(Gandalf)
	# 				amount: 2
	# 			}
	# 		}
	# 	]
	# }
	101_14: {
		cardInfo: {
			imagePath: sets/vset1/LOTR-ENV1S014.1_card.jpg
			javaClass: false
			parent: 101_14 
			parentPath: errata/pc
			version: 1
			collInfo: V1R14
			rarity: R
			setNum: "V1"
			cardNum: 14
			// Standard, Masterwork, Tengwar, FullArt, etc.  Top-level cards are always Standard.
			style: Standard
		}
		title: Gandalf
		subtitle: Olorin
		unique: true
		side: Free Peoples
		culture: Gandalf
		twilight: 4
		type: Companion
		race: Wizard
		strength: 7
		vitality: 4
		signet: Gandalf
		resistance: 6
		effects: [
			{
				type: trigger
				optional: true
				trigger: {
					type: startOfPhase
					phase: fellowship
				}
				requires: {
					type: canSpot
					filter: culture(elven),ally
					count: 3
				}
				cost: {
					type: exert
					filter: self
				}
				effect: {
					type: PutCardsFromDiscardIntoHand
					filter: choose(event,or(culture(gandalf),culture(elven)))
				}
			}			
			{
				type: modifier
				modifier: {
					type: modifyStrength
					filter: self
					amount: {
						type: ForEachYouCanSpot
						filter: or(name(Elrond),name(Galadriel),name(Celeborn),name(Saruman))
					}
				}
			}
		]
		gametext: At the start of your fellowship phase, you may spot 3 [elven] allies and exert Gandalf to take a [Gandalf] or [elven] event from your discard pile into your hand.<br>Gandalf is strength +1 for each of these characters you can spot: Celeborn, Elrond, Galadriel, Saruman.
		lore: ""
		promotext: ""
		alts: {
			promos: {
			}
			errata: {
			}
		}
	}
	
	101_15: {
		title: Gwaihir
		subtitle: Lord of Eagles
		unique: true
		culture: gandalf
		twilight: 4
		type: ally
		allyHome: fellowship,4
		race: eagle
		strength: 8
		vitality: 2
		effects: [
		    {
		        type: toPlay
                requires: {
                    type: canSpot
                    filter: name(Gandalf)
                }
		    }
			{
				type: trigger
				optional: true
				trigger: {
					type: movesTo
					filter: not(your)
				}
				effect: {
					type: heal
					filter: choose(companion,signet(gandalf))
				}
			}
			{
				type: activated
				phase: regroup
				cost: {
					type: discard
					filter: self
				}
				effect: [
					{
						type: addModifier
						modifier: {
							type: modifyMoveLimit
							amount: 1
						}
						until: endOfTurn
					}
					{
						type: optional
						player: shadowPlayer
						text: Would you like to take up to 2 Shadow cards into hand from discard?
						effect: {
							type: putCardsFromDiscardIntoHand
							filter: choose(side(shadow))
							count: 2
						}
					}
				]
			}
		]
	}
	101_16: {
		title: My Heart Tells Me
		unique: true
		culture: gandalf
		twilight: 1
		type: condition
		keyword: support area
		effects: {
			type: activatedtrigger
			trigger: {
				type: aboutToTakeWound
				filter: minion
			}
			requires: [
				{
					type: canSpot
					filter: name(Gandalf)
				}
				{
					type: perTurnLimit
					limit: 1
				}
			]
			effect: [
				{
					type: incrementPerTurnLimit
					limit: 1
				}
				{
					type: preventWound
					filter: choose(minion)
				}
				{
					type: heal
					filter: choose(companion)
				}
			]
		}
	}
	101_17: {
		title: Two Eyes, As Often As I Can Spare Them
		culture: gandalf
		twilight: 3
		type: event
		keyword: fellowship
		effects: {
			type: event
            requires: [
                {
                    type: canSpot
                    filter: name(Frodo)
                }
                {
                    type: canSpot
                    filter: name(Gandalf)
                }
            ]
			effect: {
				type: drawCards
				count: {
					type: forEachVitality
					filter: name(Frodo)
				}
			}
		}
	}
	101_18: {
		title: The White Council
		unique: true
		culture: gandalf
		twilight: 1
		type: condition
		keyword: support area
		effects: [
			{
				type: modifier
				modifier: {
					type: SarumanFirstSentenceInactive
					requires: [
						{
							type: canspot
							filter: name(Gandalf)
						}
						{
							type: canspot
							filter: culture(elven),ally
							count: 2
						}
					]
				}
			}
			{
				type: activated
				phase: regroup
				requires: [
					{
						type: perPhaseLimit
						limit: 2
					}
					{
						type: canSpot
						count: 2
						filter: culture(elven),not(exhausted)
					}
				]
				cost: {
					type: exert
					filter: choose(culture(elven),ally)
					count: 2
				}
				effect: {
					type: conditional
					requires: {
						type: perPhaseLimit
						limit: 2
					}
					effect: [
						{
							type: incrementPerPhaseLimit
							limit: 1
						}
						{
							type: heal
							filter: choose(companion,or(name(Gandalf),signet(gandalf)))
						}
					]
				}
			}
		]
	}
}
